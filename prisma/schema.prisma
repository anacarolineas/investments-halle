// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    relationMode      = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    username      String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// model WalletUser {
//     id           String         @id @default(cuid())
//     userId       String
//     user         User           @relation(fields: [userId], references: [id])
//     Transaction  Transaction[]
//     WalletTicker WalletTicker[]
// }

model Transaction {
    id             String          @id @default(cuid())
    ticker         String
    institution    String
    type           TransactionType
    amount         Int
    unitPrice      Decimal         @db.Decimal(10, 2)
    operationValue Decimal         @db.Decimal(10, 2)
    date           DateTime        @db.Date
}

enum TransactionType {
    Buy
    Sell
}

model RentabilityAsset {
    id           String  @id @default(cuid())
    ticker       String
    amount       Int
    averagePrice Decimal @db.Decimal(10, 2)
    rentability  Decimal @db.Decimal(10, 2)
    active       Boolean
}
